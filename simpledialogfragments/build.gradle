apply plugin: 'com.android.library'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31
        versionCode rootProject.ext['VERSION_NR']
        versionName rootProject.ext['VERSION']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    lint {
        checkDependencies true
        disable 'MissingTranslation'
    }
}

dependencies {
    debugImplementation project(':lintchecks')
    lintChecks project(':lintchecks')
    lintPublish project(':lintchecks')

    testImplementation  'junit:junit:4.13.2'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.alimuzaffar.lib:pinentryedittext:2.0.6'
}



// for publication to maven central via Sonatype nexus
ext {
    PUBLISH_GROUP_ID = 'io.github.eltos'
    PUBLISH_ARTIFACT_ID = 'simpledialogfragments'
    PUBLISH_VERSION = rootProject.ext['VERSION']
}

apply from: 'publish.gradle'


// Javadoc API documentation
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("${rootProject.projectDir}/docs/javadoc")
    failOnError false
}
afterEvaluate {
    // adding this to the classpath fixes "cannot find annotations symbols" errors
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath
    })
    // adding this to the classpath fixes "package R not found" errors
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().outputs.files
    })
}
